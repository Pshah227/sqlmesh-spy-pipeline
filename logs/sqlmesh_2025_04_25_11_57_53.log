2025-04-25 11:57:53,620 - MainThread - sqlmesh.core.config.connection - INFO - Creating new DuckDB adapter for data files: {'spy_analysis.db'} (connection.py:321)
2025-04-25 11:57:54,024 - MainThread - sqlmesh.core.config.connection - INFO - Using existing DuckDB adapter due to overlapping data file: spy_analysis.db (connection.py:311)
2025-04-25 11:57:54,116 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"spy_transformed": 44690434> (evaluator.py:621)
2025-04-25 11:57:54,141 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: WITH "base" AS (SELECT "spy_staging"."date" AS "date", 'SPY' AS "symbol", "spy_staging"."close" AS "close", LAG("spy_staging"."close") OVER (ORDER BY "spy_staging"."date") AS "prev_close" FROM "sqlmesh__default"."spy_staging__3169931869" AS "spy_staging"), "returns" AS (SELECT "base"."date" AS "date", "base"."symbol" AS "symbol", "base"."close" AS "close", "base"."prev_close" AS "prev_close", ("base"."close" - "base"."prev_close") / "base"."prev_close" * 100.0 AS "daily_return_pct", AVG("base"."close") OVER (ORDER BY "base"."date" ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS "_7d_ma", AVG("base"."close") OVER (ORDER BY "base"."date" ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) AS "_30d_ma", AVG("base"."close") OVER (ORDER BY "base"."date" ROWS BETWEEN 89 PRECEDING AND CURRENT ROW) AS "_90d_ma", STDDEV((("base"."close" - "base"."prev_close") / "base"."prev_close" * 100.0)) OVER (ORDER BY "base"."date" ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) AS "_30d_volatility", MAX("base"."close") OVER (ORDER BY "base"."date" ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) AS "_30d_high" FROM "base" AS "base" WHERE NOT "base"."prev_close" IS NULL), "monthly_metrics" AS (SELECT "returns"."date" AS "date", "returns"."symbol" AS "symbol", "returns"."close" AS "close", "returns"."prev_close" AS "prev_close", "returns"."daily_return_pct" AS "daily_return_pct", "returns"."_7d_ma" AS "_7d_ma", "returns"."_30d_ma" AS "_30d_ma", "returns"."_90d_ma" AS "_90d_ma", "returns"."_30d_volatility" AS "_30d_volatility", "returns"."_30d_high" AS "_30d_high", DATE_TRUNC('MONTH', "returns"."date") AS "month_start", FIRST_VALUE("returns"."close") OVER (PARTITION BY DATE_TRUNC('MONTH', "returns"."date") ORDER BY "returns"."date") AS "month_start_close", LAG("returns"."close", 252) OVER (ORDER BY "returns"."date") AS "year_ago_close" FROM "returns" AS "returns"), "final" AS (SELECT "monthly_metrics"."date" AS "date", "monthly_metrics"."symbol" AS "symbol", "monthly_metrics"."close" AS "close", "monthly_metrics"."daily_return_pct" AS "daily_return_pct", "monthly_metrics"."_7d_ma" AS "7d_ma", "monthly_metrics"."_30d_ma" AS "30d_ma", "monthly_metrics"."_90d_ma" AS "90d_ma", "monthly_metrics"."_30d_volatility" AS "30d_volatility", ("monthly_metrics"."close" - "monthly_metrics"."month_start_close") / "monthly_metrics"."month_start_close" * 100.0 AS "month_to_date_return", CASE WHEN NOT "monthly_metrics"."year_ago_close" IS NULL THEN (("monthly_metrics"."close" - "monthly_metrics"."year_ago_close") / "monthly_metrics"."year_ago_close" * 100.0) ELSE NULL END AS "yearly_change_pct", CASE WHEN "monthly_metrics"."_30d_high" <= "monthly_metrics"."close" THEN TRUE ELSE FALSE END AS "high_30d_flag", CASE WHEN ABS("monthly_metrics"."daily_return_pct") > 2.0 THEN TRUE ELSE FALSE END AS "volatility_flag", ("monthly_metrics"."close" - MAX("monthly_metrics"."close") OVER (ORDER BY "monthly_metrics"."date")) / MAX("monthly_metrics"."close") OVER (ORDER BY "monthly_metrics"."date") * 100.0 AS "drawdown_pct" FROM "monthly_metrics" AS "monthly_metrics") SELECT "final"."date" AS "date", "final"."symbol" AS "symbol", "final"."close" AS "close", "final"."daily_return_pct" AS "daily_return_pct", "final"."7d_ma" AS "7d_ma", "final"."30d_ma" AS "30d_ma", "final"."90d_ma" AS "90d_ma", "final"."30d_volatility" AS "30d_volatility", "final"."month_to_date_return" AS "month_to_date_return", "final"."yearly_change_pct" AS "yearly_change_pct", "final"."high_30d_flag" AS "high_30d_flag", "final"."volatility_flag" AS "volatility_flag", "final"."drawdown_pct" AS "drawdown_pct" FROM "final" AS "final" WHERE NOT "final"."date" IS NULL LIMIT 1000 (base.py:2132)
2025-04-25 11:57:54,175 - MainThread - root - INFO - Shutting down the event dispatcher (dispatcher.py:159)
